'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
author Josh Stuart <joshstuartx@gmail.com>



var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _winston = require('winston');

var _winston2 = _interopRequireDefault(_winston);

var _config = require('../../config/config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * A utils service for logging
 *
 * @constructor
 */

var LoggerService = function () {
    function LoggerService() {
        var _this = this;

        _classCallCheck(this, LoggerService);

        this.logger = new _winston2.default.Logger();

        // add transports
        _lodash2.default.forEach(_config2.default.logger.transports, function (transport) {
            if (!!_winston2.default.transports[transport] && !!_config2.default.logger[transport]) {
                _this.logger.add(_winston2.default.transports[transport], _config2.default.logger[transport]);
            }
        });
    }

    /**
     * Log an error.
     *
     * @param messages
     */


    _createClass(LoggerService, [{
        key: 'error',
        value: function error() {
            var _this2 = this;

            _lodash2.default.forEach(arguments, function (argument) {
                _this2.logger.error(_config2.default.logger.prefix, argument);
            });
        }

        /**
         * Log a warning.
         *
         * @param messages
         */

    }, {
        key: 'warning',
        value: function warning() {
            var _this3 = this;

            _lodash2.default.forEach(arguments, function (argument) {
                _this3.logger.warn(_config2.default.logger.prefix, argument);
            });
        }

        /**
         * Log an info.
         *
         * @param message
         */

    }, {
        key: 'info',
        value: function info() {
            var _this4 = this;

            _lodash2.default.forEach(arguments, function (argument) {
                _this4.logger.info(_config2.default.logger.prefix, argument);
            });
        }

        /**
         * Log.
         *
         * @param message
         */

    }, {
        key: 'log',
        value: function log() {
            var _this5 = this;

            _lodash2.default.forEach(arguments, function (argument) {
                _this5.logger.log(_config2.default.logger.prefix, argument);
            });
        }
    }]);

    return LoggerService;
}();

exports.default = new LoggerService();